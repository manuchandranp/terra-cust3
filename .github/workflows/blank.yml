name: "Artifactory Generic OIDC Multi-Job"
on:
  workflow_dispatch:
  push:
    # branches:
    # - feature/*
env:
  OIDC_PROVIDER: 'manu-new'
  OIDC_AUDIENCE: 'newmanu'
  JF_URL: "https://hts2.jfrog.io"
permissions:
  contents: read
  id-token: write
jobs:
  publish-artifact:
    runs-on: ubuntu-latest
    outputs:
      access_token: ${{ steps.exchange_token.outputs.ACCESS_TOKEN }}  # Set output for access token
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Fetch OIDC Token
        id: fetch_oidc_token
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ env.JF_URL }}
        with:
          oidc-provider-name: ${{ env.OIDC_PROVIDER }}
          oidc-audience: ${{ env.OIDC_AUDIENCE }}
      - name: Get ID Token
        id: get_id_token
        run: |
          ID_TOKEN=$(curl -sLS -H "User-Agent: actions/oidc-client" -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
          "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=github" | jq .value | tr -d '"')
          echo "ID_TOKEN=${ID_TOKEN}" >> $GITHUB_ENV
      - name: Exchange token with access
        id: exchange_token  # Added an ID for this step
        env:
          ID_TOKEN: ${{ env.ID_TOKEN }}
          JFROG_PLATFORM_URL: ${{ env.JF_URL }}
        run: |
          ACCESS_TOKEN=$(curl -XPOST -H "Content-Type: application/json" "https://hts2.jfrog.io/access/api/v1/oidc/token" -d "{\"grant_type\": \"urn:ietf:params:oauth:grant-type:token-exchange\", \"subject_token_type\":\"urn:ietf:params:oauth:token-type:id_token\", \"subject_token\": \"${ID_TOKEN}\", \"provider_name\": \"jfrog-github\"}" | jq .access_token | tr -d '"')
          echo "::set-output name=ACCESS_TOKEN::${ACCESS_TOKEN}"  # Pass the access token as output
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2 
      - name: Configure Artifactory Credentials via tfrc.json
        env:
          ACCESS_TOKEN: ${{ steps.exchange_token.outputs.ACCESS_TOKEN }}  # Use the output for the token
          JF_URL: ${{ env.JF_URL }}
        run: |
          # 1. Create the .terraform.d directory if it doesn't exist (Terraform standard location)
           mkdir -p ~/.terraform.d 
          # 2. Define the path to the credentials file
           CREDENTIALS_FILE="$HOME/.terraform.d/credentials.tfrc.json"
          
          # 3. Create the JSON content, injecting the ACCESS_TOKEN
          #    The 'hts2.jfrog.io' must exactly match the host in your module source.
          cat << EOF > ${CREDENTIALS_FILE}
          {
            "credentials": {
              "hts2.jfrog.io": {
                "token": "${ACCESS_TOKEN}"
              }
            }
          }
          EOF
          
          # Optional: Secure the file
          #chmod 600 "${CREDENTIALS_FILE}"
          cat $HOME/.terraform.d/credentials.tfrc.json
          echo "Successfully configured Artifactory token in ${CREDENTIALS_FILE}" 
